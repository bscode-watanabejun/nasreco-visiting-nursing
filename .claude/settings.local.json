{
  "permissions": {
    "allow": [
      "Bash(psql:*)",
      "Bash(npx tsx:*)",
      "Bash(git commit:*)",
      "Bash(npm run check:*)",
      "Bash(git log:*)",
      "Bash(printf '\\n')",
      "Bash(npx drizzle-kit push:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(DATABASE_URL=$DATABASE_URL npx drizzle-kit push)",
      "Bash(timeout:*)",
      "Bash(npm run:*)",
      "Bash(npx drizzle-kit migrate:*)",
      "Bash(npx drizzle-kit:*)",
      "Bash(printf \"No, add the constraint without truncating the table\\n\\n\\n\\n\\n\")",
      "Bash(if [ -n \"$DATABASE_URL\" ])",
      "Bash(then)",
      "Bash(else)",
      "Bash(exit 1)",
      "Bash(fi)",
      "WebFetch(domain:docs.replit.com)",
      "WebFetch(domain:blog.replit.com)",
      "WebSearch",
      "Bash(npm install:*)",
      "Bash(then npm run db:push)",
      "Bash(else echo \"DATABASE_URL not set\")",
      "Bash(node -e \"const bcrypt = require(''bcryptjs''); console.log(''Password hash for password123:'', bcrypt.hashSync(''password123'', 10));\")",
      "Bash(wc -l /home/runner/workspace/client/src/components/{CareManagerManagement,BuildingManagement,InsuranceCardManagement,MonthlyStatistics,CarePlanManagement,CareReportManagement,SpecialManagementSettings,BonusMasterManagement,HeadquartersDashboard,FacilityManagement}.tsx)",
      "Bash(for f in CareManagerManagement BuildingManagement InsuranceCardManagement MonthlyStatistics CarePlanManagement CareReportManagement SpecialManagementSettings BonusMasterManagement HeadquartersDashboard FacilityManagement)",
      "Bash(do [ -f \"/home/runner/workspace/client/src/components/$f.tsx\" ])",
      "Bash(done)",
      "Bash(do echo \"=== $f.tsx ===\")",
      "Bash(for f in MonthlyStatistics HeadquartersDashboard FacilityManagement)",
      "Bash(do echo \"=== $f.tsx useQuery count: ===\")",
      "Bash(git checkout -b feature/path-based-multitenancy)",
      "Bash(for file in client/src/components/*.tsx)",
      "Bash(do if git diff --quiet \"$file\")",
      "Bash(git push -u origin feature/path-based-multitenancy)",
      "Bash(git fetch origin)",
      "Bash(then npx drizzle-kit push)",
      "Bash(printf:*)"
    ],
    "deny": [],
    "ask": []
  }
}
