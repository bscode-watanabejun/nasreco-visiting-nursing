{
  "permissions": {
    "allow": [
      "Bash(then psql $DATABASE_URL -c \"\n-- care_initial_visit_1„ÅÆÊù°‰ª∂„ÇíÁ¢∫Ë™ç\nSELECT \n  bonus_code,\n  bonus_name,\n  predefined_conditions\nFROM bonus_master\nWHERE bonus_code = ''care_initial_visit_1'';\n\")",
      "Bash(then psql $DATABASE_URL -c \"\n-- care_initial_visit_1„Å®care_initial_visit_2„ÅÆË©≥Á¥∞„ÇíÁ¢∫Ë™ç\nSELECT \n  bonus_code,\n  bonus_name,\n  fixed_points,\n  can_combine_with,\n  cannot_combine_with,\n  is_active,\n  display_order\nFROM bonus_master\nWHERE bonus_code IN (''care_initial_visit_1'', ''care_initial_visit_2'')\nORDER BY bonus_code;\n\")",
      "Bash(then psql $DATABASE_URL -c \"\n-- „ÉÜ„Çπ„Éà2„ÅÆË®™ÂïèË®òÈå≤„ÅßÂÆüÈöõ„Å´„Å©„ÅÆÂä†ÁÆó„ÅåË©ï‰æ°„Åï„Çå„Åü„ÅãÁ¢∫Ë™ç\nSELECT \n  bch.id,\n  bm.bonus_code,\n  bm.bonus_name,\n  bch.calculated_points,\n  bch.calculation_details\nFROM bonus_calculation_history bch\nJOIN bonus_master bm ON bch.bonus_master_id = bm.id\nWHERE bch.nursing_record_id = ''6f9cc678-7220-4656-9502-93886e20c9a2''\nORDER BY bch.created_at;\n\")",
      "Bash(then psql $DATABASE_URL -c \"\n-- care_initial_visit_1„ÅÆÊù°‰ª∂„ÇíÂÜçÁ¢∫Ë™ç\nSELECT \n  bonus_code,\n  bonus_name,\n  predefined_conditions,\n  is_active\nFROM bonus_master\nWHERE bonus_code = ''care_initial_visit_1'';\n\")",
      "Bash(then psql $DATABASE_URL -c \"\n-- „ÉÜ„Çπ„Éà3„ÅÆË®™ÂïèË®òÈå≤„ÇíÁ¢∫Ë™ç\nSELECT \n  id,\n  visit_date,\n  actual_start_time,\n  actual_end_time,\n  EXTRACT(EPOCH FROM (actual_end_time - actual_start_time))/60 as duration_minutes,\n  is_first_visit_of_plan,\n  calculated_points,\n  applied_bonuses::jsonb->0->>''bonusName'' as bonus1,\n  applied_bonuses::jsonb->1->>''bonusName'' as bonus2\nFROM nursing_records\nWHERE id = ''7cecddf0-d18f-4d79-bcb1-fba5df12fb26'';\n\")",
      "Bash(then psql $DATABASE_URL -c \"\n-- care_initial_visit_2„Å®care_long_visit„ÇíÁõ∏‰∫í„Å´‰ΩµÁÆóÂÆöÂèØËÉΩ„Å´„Åô„Çã\nUPDATE bonus_master\nSET can_combine_with = array_append(can_combine_with, ''care_long_visit'')\nWHERE bonus_code = ''care_initial_visit_2'';\n\nUPDATE bonus_master\nSET can_combine_with = array_append(can_combine_with, ''care_initial_visit_2'')\nWHERE bonus_code = ''care_long_visit'';\n\n-- Á¢∫Ë™ç\nSELECT \n  bonus_code,\n  bonus_name,\n  can_combine_with,\n  cannot_combine_with\nFROM bonus_master\nWHERE bonus_code IN (''care_initial_visit_2'', ''care_long_visit'')\nORDER BY bonus_code;\n\")",
      "Bash(then psql $DATABASE_URL -c \"\nSELECT \n  bonus_code,\n  bonus_name,\n  insurance_type,\n  predefined_conditions,\n  is_active\nFROM bonus_master\nWHERE is_active = true\n  AND predefined_conditions IS NOT NULL\nORDER BY insurance_type, display_order\nLIMIT 10;\n\")",
      "Bash(then psql $DATABASE_URL -c \"SELECT bonus_code, bonus_name, insurance_type, predefined_conditions, is_active FROM bonus_master WHERE is_active = true AND predefined_conditions IS NOT NULL ORDER BY insurance_type, display_order LIMIT 10;\")",
      "Bash(then psql $DATABASE_URL -c \"SELECT bonus_code, bonus_name, insurance_type, predefined_conditions FROM bonus_master WHERE bonus_code IN (''medical_discharge_joint_guidance'', ''care_initial_visit_1'', ''care_initial_visit_2'', ''care_long_visit'', ''care_emergency_system'', ''care_emergency_system_2'') AND is_active = true ORDER BY bonus_code;\")",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(tree:*)",
      "Bash(git push)",
      "Bash(npm run dev:*)",
      "Bash(psql:*)",
      "Bash(curl:*)",
      "Bash(npm run check:*)",
      "Bash(lsof:*)",
      "Read(//tmp/**)",
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: „É¨„Çª„Éó„ÉàË©≥Á¥∞ÁîªÈù¢„ÅÆË°®Á§∫„Ç®„É©„Éº„Çí‰øÆÊ≠£\n\n## ÂïèÈ°å\n- ÊúàÊ¨°„É¨„Çª„Éó„ÉàÁÆ°ÁêÜÁîªÈù¢„Åß„ÄåË©≥Á¥∞„Äç„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åô„Çã„Å®„Äå„É¨„Çª„Éó„Éà„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„Äç„Å®„ÅÑ„ÅÜ„Ç®„É©„Éº„ÅåË°®Á§∫„Åï„Çå„Çã\n\n## ÂéüÂõ†\n1. „Éû„É´„ÉÅ„ÉÜ„Éä„É≥„ÉàÂØæÂøú„ÅÆURLÔºà/:companySlug/:facilitySlug/monthly-receipts/:idÔºâ„Åã„Çâ„ÄÅ„É¨„Çª„Éó„ÉàID„ÇíÊ≠£„Åó„ÅèÂèñÂæó„Åß„Åç„Å¶„ÅÑ„Å™„Åã„Å£„Åü\n2. „Çµ„Éº„Éê„ÉºÂÅ¥API„ÅåËøî„ÅôdoctorOrder„ÅÆ„Éá„Éº„ÇøÊßãÈÄ†„Åå„ÄÅ„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÅÆÊúüÂæÖ„Åô„ÇãÂΩ¢Âºè„Å®‰∏ç‰∏ÄËá¥„Å†„Å£„Åü\n\n## ‰øÆÊ≠£ÂÜÖÂÆπ\n- MonthlyReceiptDetail.tsx: ‰∏°Êñπ„ÅÆ„É´„Éº„Éà„Éë„Çø„Éº„É≥„Å´ÂØæÂøú„Åô„Çã„Çà„ÅÜ„Å´„Éë„É©„É°„Éº„ÇøÂèñÂæó„Çí‰øÆÊ≠£\n- routes.ts: doctorOrder„ÅÆ„É¨„Çπ„Éù„É≥„ÇπÊßãÈÄ†„ÇíÊ≠£„Åó„ÅÑ„Éç„Çπ„ÉàÂΩ¢Âºè„Å´‰øÆÊ≠£\n- „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„ÇíÊîπÂñÑÔºàÈÅ©Âàá„Å™„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫Ôºâ\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": []
  }
}
